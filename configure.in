dnl Process this file with autoconf to produce a configure script.
AC_INIT(gimprc.in)

dnl Initialize automake stuff
dnl $Format: "GIMP_MAJOR_VERSION=$ReleaseMajorVersion$" $
GIMP_MAJOR_VERSION=1
dnl $Format: "GIMP_MINOR_VERSION=$ReleaseMinorVersion$" $
GIMP_MINOR_VERSION=0
dnl $Format: "GIMP_MICRO_VERSION=$ReleaseMicroVersion$" $
GIMP_MICRO_VERSION=4
dnl $Format: "GIMP_RNH_VERSION=$ReleaseRNHVersion$" $
GIMP_RNH_VERSION=14b01  

GIMP_VERSION=$GIMP_MAJOR_VERSION.$GIMP_MINOR_VERSION.$GIMP_MICRO_VERSION.$GIMP_RNH_VERSION

dnl $Format: "AM_INIT_AUTOMAKE(gimp, $ReleaseVersion$)" $
AM_INIT_AUTOMAKE(gimp, $GIMP_VERSION, no-define)

dnl Specify a header configuration file
AM_CONFIG_HEADER(config.h)

dnl Initialize libtool
AM_PROG_LIBTOOL

dnl Initialize maintainer mode
AM_MAINTAINER_MODE

AC_CANONICAL_HOST

AC_ARG_ENABLE(debug, [  --enable-debug          turn on debugging [default=no]],
if eval "test x$enable_debug = xyes"; then
  DEBUGFLAG="-g"
fi)

AC_ARG_ENABLE(ansi, [  --enable-ansi           turn on strict ansi [default=no]], , enable_ansi=no)

dnl Possibly change default gimpdir from .gimp
gimpdir=.gimp
AC_ARG_ENABLE(gimpdir, [  --enable-gimpdir=DIR    change default gimpdir from .gimp to DIR],
if eval "test x$enable_gimpdir != x"; then
  if eval "test x$enable_gimpdir != xyes"; then
    gimpdir=$enable_gimpdir
  fi
fi)

dnl Possibly change default precision from 16 bit
precision=PRECISION_U16
AC_ARG_ENABLE(precision, [  --enable-precision={u8,u16,float}  set the data precision [default=u16]],
if eval "test x$enable_precision != x"; then
  if eval "test x$enable_precision == xu8"; then
    precision=PRECISION_U8
  fi
  if eval "test x$enable_precision == xu16"; then
    precision=PRECISION_U16
  fi
  if eval "test x$enable_precision == xfloat"; then
    precision=PRECISION_FLOAT
  fi
fi)

AC_DEFUN(AC_GIMP_CHECK,
[
	AM_PATH_GTK(1.2.8,,
 	  AC_MSG_ERROR(Test for GTK failed. See the file 'INSTALL' for help.))
        X_LIBS=$GTK_LIBS
        X_CFLAGS=$GTK_CFLAGS
        AC_SUBST(X_LIBS)
        AC_SUBST(X_CFLAGS)
])

if test -n "$DEBUGFLAG"; then
  CFLAGS="$DEBUGFLAG $CFLAGS"
fi

AC_C_BIGENDIAN

dnl Checks for programs.
AC_PROG_CC
AM_PROG_CC_STDC
AC_PROG_INSTALL
AC_PROG_LN_S
AC_PROG_MAKE_SET
AC_PROG_CPP

AC_GIMP_CHECK

if eval "test x$GCC = xyes"; then
  if echo "$CFLAGS" | grep "\-Wall" > /dev/null 2> /dev/null; then
    CFLAGS="$CFLAGS"
  else
    CFLAGS="$CFLAGS -Wall"
  fi

  if eval "test x$enable_ansi = xyes"; then
    if echo "$CFLAGS" | grep "\-ansi" > /dev/null 2> /dev/null; then
      CFLAGS="$CFLAGS"
    else
      CFLAGS="$CFLAGS -ansi"
    fi

    if echo "$CFLAGS" | grep "\-pedantic" > /dev/null 2> /dev/null; then
      CFLAGS="$CFLAGS"
    else
      CFLAGS="$CFLAGS -pedantic"
    fi
  fi
fi

gimp_save_CPPFLAGS="$CPPFLAGS"
gimp_save_LDFLAGS="$LDFLAGS"
gimp_save_LIBS="$LIBS"

CPPFLAGS="$CPPFLAGS $GTK_CFLAGS"
LDFLAGS="$LDFLAGS `echo $GTK_LIBS | sed 's/\(.*\)\(-lgtk.*\)/\1/'`"
LIBS="$LIBS $GTK_LIBS"

dnl Test for libtiff
  if test -z "$LIBTIFF_LIB"; then
    AC_CHECK_LIB(tiff, TIFFReadScanline,
      AC_CHECK_HEADER(tiffio.h,
	TIFF='tiff'; LIBTIFF_LIB='-ltiff',
	AC_MSG_WARN(*** TIFF plug-in will not be built (TIFF header files not found) ***)),
      AC_CHECK_LIB(tiff, TIFFWriteScanline,
	AC_CHECK_HEADER(tiffio.h,
          TIFF='tiff'; LIBTIFF_LIB='-ltiff -ljpeg -lz',
	  AC_MSG_WARN(*** TIFF plug-in will not be built (TIFF header files not found) ***)),
	AC_CHECK_LIB(tiff34, TIFFFlushData,
	  AC_CHECK_HEADER(tiffio.h,
            TIFF='tiff'; LIBTIFF_LIB='-ltiff34 -ljpeg -lz',
	    AC_MSG_WARN(*** TIFF plug-in will not be built (TIFF header files not found) ***)),
        AC_MSG_WARN(*** TIFF plug-in will not be built (TIFF library not found) ***), -ljpeg -lz -lm), -ljpeg -lz -lm), -lm)
  fi

dnl Check for shared memory
AC_CHECK_HEADER(sys/ipc.h, AC_DEFINE(HAVE_IPC_H), no_sys_ipc=yes)
AC_CHECK_HEADER(sys/shm.h, AC_DEFINE(HAVE_SHM_H), no_sys_shm=yes)
if test "$ac_cv_header_sys_shm_h" = "yes"; then
  AC_MSG_CHECKING(whether shmctl IPC_RMID allowes subsequent attaches)
  AC_TRY_RUN([
	#include <sys/types.h>
	#include <sys/ipc.h>
	#include <sys/shm.h>
	int main()
	{
	  int id;
	  char *shmaddr;
	id = shmget (IPC_PRIVATE, 4, IPC_CREAT | 0777);
	if (id == -1)
	  exit (2);
	  shmaddr = shmat (id, 0, 0);
	  shmctl (id, IPC_RMID, 0);
	  if ((char*) shmat (id, 0, 0) == (char*) -1)
	  {
	    shmdt (shmaddr);
	    exit (1);
	  }
	  shmdt (shmaddr);
	  shmdt (shmaddr);
	  exit (0);
	}
    ],
    AC_DEFINE(IPC_RMID_DEFERRED_RELEASE)
      AC_MSG_RESULT(yes),
    AC_MSG_RESULT(no),
    AC_MSG_RESULT(assuming no))
fi

AC_HEADER_DIRENT
AC_HEADER_STDC
AC_HEADER_SYS_WAIT
AC_HEADER_TIME

AC_CHECK_HEADER(sys/time.h, AC_DEFINE(HAVE_SYS_TIME_H))
AC_CHECK_HEADER(unistd.h, AC_DEFINE(HAVE_UNISTD_H))

AC_TYPE_PID_T
AC_TYPE_SIGNAL
AC_FUNC_VPRINTF

AC_FUNC_ALLOCA

dnl Check for sys/select.h

AC_MSG_CHECKING([fd_set and sys/select])
AC_TRY_COMPILE([#include <sys/types.h>],
        [fd_set readMask, writeMask;], gimp_ok=yes, gimp_ok=no)
if test $gimp_ok = no; then
    AC_HEADER_EGREP(fd_mask, sys/select.h, gimp_ok=yes)
    if test $gimp_ok = yes; then
        AC_DEFINE(HAVE_SYS_SELECT_H)
    fi
fi
AC_MSG_RESULT($gimp_ok)
if test $gimp_ok = no; then
    AC_DEFINE(NO_FD_SET)
fi

dnl Check for random number functions
dnl LIBUCB_LIB=""
dnl AC_CHECK_FUNC(random, [
dnl  AC_DEFINE(RAND_FUNC, random)
dnl  AC_DEFINE(SRAND_FUNC, srandom)],
dnl  [AC_CHECK_LIB(ucb, random, [
dnl    AC_DEFINE(RAND_FUNC, random)
dnl    AC_DEFINE(SRAND_FUNC, srandom)
dnl    LIBUCB_LIB='-lucb'],
dnl    [AC_CHECK_FUNC(lrand48,
dnl      [AC_DEFINE(RAND_FUNC, lrand48) AC_DEFINE(SRAND_FUNC, srand48)],
dnl      [AC_DEFINE(RAND_FUNC, rand) AC_DEFINE(SRAND_FUNC, srand)])])])

dnl check for difftime
dnl AC_CHECK_FUNC(difftime, , AC_DEFINE(NO_DIFFTIME))

dnl check for inline
AC_MSG_CHECKING([for inline definition in glibconfig.h])
AC_EGREP_CPP(glib_defines_inline,
[#include <glibconfig.h>
#ifdef inline
   glib_defines_inline
#endif
], have_glib_inline=yes, have_glib_inline=no)
AC_MSG_RESULT($have_glib_inline)
if test "$have_glib_inline" = "no"; then
  AC_C_INLINE
fi  

CPPFLAGS="$gimp_save_CPPFLAGS"
LDFLAGS="$gimp_save_LDFLAGS"
LIBS="$gimp_save_LIBS"

gimpdatadir=$datadir
gimpplugindir=$datadir

dnl This is for generating PDB docuemntation.
AC_PATH_PROGS(EMACS, emacs xemacs, :)

dnl This is for the mail plug-in
sendmail_path=":"
AC_ARG_ENABLE(sendmail_path, [  --with-sendmail=DIR     set sendmail command location],
if eval "test x$with_sendmail != x"; then
    sendmail_path=$with_sendmail
fi)
AC_PATH_PROG(SENDMAIL, "sendmail", $sendmail_path, $PATH:/usr/lib:/usr/sbin)

if test $ac_cv_path_SENDMAIL != ":"; then
  MAILER="-DMAILER=\\\"$ac_cv_path_SENDMAIL\\\""
fi

AM_CONDITIONAL(STATICLIBS, test x$enable_static = xyes)

AC_SUBST(GIMP_MAJOR_VERSION)
AC_SUBST(GIMP_MINOR_VERSION)
AC_SUBST(GIMP_MICRO_VERSION)
AC_SUBST(GIMP_RNH_VERSION)
AC_SUBST(GIMP_VERSION)

AC_SUBST(precision)
AC_SUBST(gimpdir)
AC_SUBST(gimpdatadir)
AC_SUBST(gimpplugindir)
AC_SUBST(TIFF)
AC_SUBST(LIBTIFF_LIB)
AC_SUBST(MAILER)

dnl Output the Makefiles

AC_OUTPUT(
Makefile
gimprc
gimprc_user
gimptool
libgimp/gimpfeatures.h
libgimp/Makefile
plug-ins/Makefile
plug-ins/pts/Makefile
plug-ins/fm_pts/Makefile
plug-ins/rll/Makefile
plug-ins/parsley/Makefile
plug-ins/blur/Makefile
plug-ins/bz2/Makefile
plug-ins/compose/Makefile
plug-ins/dbbrowser/Makefile
plug-ins/decompose/Makefile
plug-ins/edge/Makefile
plug-ins/fur/Makefile
plug-ins/gauss_rle/Makefile
plug-ins/gbr/Makefile
plug-ins/gz/Makefile
plug-ins/mblur/Makefile
plug-ins/noisify/Makefile
plug-ins/script-fu/Makefile
plug-ins/script-fu/scripts/Makefile
plug-ins/sgi/Makefile
plug-ins/sharpen/Makefile
plug-ins/snoise/Makefile
plug-ins/sobel/Makefile
plug-ins/spread/Makefile
plug-ins/tiff/Makefile
dnl plug-ins/url/Makefile
app/Makefile
docs/Makefile,
chmod +x gimptool
)
